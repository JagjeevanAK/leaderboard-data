{
  "last_updated": "2025-05-10T06:01:27.000Z",
  "activity": [
    {
      "type": "comment_created",
      "title": "openfoodfacts/smooth-app#6589",
      "time": "2025-05-10T06:01:27.000Z",
      "link": "https://github.com/openfoodfacts/smooth-app/pull/6589#issuecomment-2868444665",
      "text": "Hello @monsieurtanuki,\r\nDoes it now look good(code)?\r\n\r\nScreenshot:\r\n<img width=\"367\" alt=\"Screenshot 2025-05-10 at 11 29 11â€¯AM\" src=\"https://github.com/user-attachments/assets/361559de-0716-4aae-838c-6b1a560920d8\" />\r\n"
    },
    {
      "type": "comment_created",
      "title": "openfoodfacts/smooth-app#6588",
      "time": "2025-05-10T05:29:49.000Z",
      "link": "https://github.com/openfoodfacts/smooth-app/issues/6588#issuecomment-2868402897",
      "text": "> [@AshutoshKhadse23](https://github.com/AshutoshKhadse23) It's clean, but it's not consistent with the rest of the app and with the website. So please switch to what was asked initially, using the same chips as in price lists. For the record I have zero interest in UI.\n\nOk "
    },
    {
      "type": "pr_opened",
      "title": "openfoodfacts/smooth-app#6589",
      "time": "2025-05-09T18:47:18.000Z",
      "link": "https://github.com/openfoodfacts/smooth-app/pull/6589",
      "text": "feat: Add More verbose proof display"
    },
    {
      "type": "comment_created",
      "title": "openfoodfacts/smooth-app#6588",
      "time": "2025-05-09T18:27:56.000Z",
      "link": "https://github.com/openfoodfacts/smooth-app/issues/6588#issuecomment-2867565258",
      "text": "@monsieurtanuki,\nI know you are looking for a price button in the UI, but this other approach looks cleaner. What do you say?\n\n<img width=\"369\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/227a7ebb-b1f0-47ae-92e9-b732ac4c46d4\" />"
    },
    {
      "type": "comment_created",
      "title": "openfoodfacts/smooth-app#6561",
      "time": "2025-05-08T13:17:15.000Z",
      "link": "https://github.com/openfoodfacts/smooth-app/pull/6561#issuecomment-2863035757",
      "text": "@monsieurtanuki,\r\nYes, I agree, and thank you for your patience."
    },
    {
      "type": "pr_merged",
      "title": "openfoodfacts/smooth-app#6561",
      "time": "2025-05-08T13:15:50.000Z",
      "link": "https://github.com/openfoodfacts/smooth-app/pull/6561",
      "text": "feat: Add infinite scrolling to the various Open Prices ListViews.",
      "turnaround_time": 1445951
    },
    {
      "type": "comment_created",
      "title": "openfoodfacts/smooth-app#6561",
      "time": "2025-05-08T12:23:26.000Z",
      "link": "https://github.com/openfoodfacts/smooth-app/pull/6561#issuecomment-2862871661",
      "text": "@monsieurtanuki,\r\nCheck once!!\r\n"
    },
    {
      "type": "comment_created",
      "title": "openfoodfacts/smooth-app#6561",
      "time": "2025-05-08T11:02:10.000Z",
      "link": "https://github.com/openfoodfacts/smooth-app/pull/6561#issuecomment-2862641782",
      "text": "> @AshutoshKhadse23\r\n> \r\n> * you're not supposed to `throw` a `MaybeError`. Just throw an exception in `fetchInit`\r\n> * and you don't have to test `if (_bearerToken == null)` after `fetchInit` within `fetchData`, because it would have thrown an exception already\r\n> * you're **NOT** supposed to close the session (`deleteUserSession`) after each page. Just do it in the `dispose` of the list. **ONCE**. And we don't care if the `deleteUserSession` is not successful.\r\n\r\nHow about this? I just wanna to complete work perfectly so if you have time could you check it?\r\n```dart\r\nclass _InfiniteScrollProofManager extends InfiniteScrollManager<Proof> {\r\n  _InfiniteScrollProofManager({\r\n    required this.selectProof,\r\n  });\r\n\r\n  static const int _pageSize = 10;\r\n  final bool selectProof;\r\n  String? _bearerToken;\r\n\r\n  @override\r\n  Future<void> fetchInit() async {\r\n    final User user = ProductQuery.getWriteUser();\r\n    final MaybeError<String> token =\r\n    await OpenPricesAPIClient.getAuthenticationToken(\r\n      username: user.userId,\r\n      password: user.password,\r\n      uriHelper: ProductQuery.uriPricesHelper,\r\n    );\r\n\r\n    if (token.isError) {\r\n      throw Exception(token.error ?? 'Could not authenticate with the server');\r\n    }\r\n\r\n    _bearerToken = token.value;\r\n  }\r\n\r\n  @override\r\n  Future<void> fetchData(final int pageNumber) async {\r\n    if (_bearerToken == null) {\r\n      await fetchInit();\r\n    }\r\n\r\n    final User user = ProductQuery.getWriteUser();\r\n    final MaybeError<GetProofsResult> result =\r\n    await OpenPricesAPIClient.getProofs(\r\n      GetProofsParameters()\r\n        ..orderBy = <OrderBy<GetProofsOrderField>>[\r\n          const OrderBy<GetProofsOrderField>(\r\n            field: GetProofsOrderField.created,\r\n            ascending: false,\r\n          ),\r\n        ]\r\n        ..owner = user.userId\r\n        ..pageSize = _pageSize\r\n        ..pageNumber = pageNumber,\r\n      uriHelper: ProductQuery.uriPricesHelper,\r\n      bearerToken: _bearerToken!,\r\n    );\r\n\r\n    if (result.isError) {\r\n      throw Exception(result.error ?? 'Failed to fetch proofs');\r\n    }\r\n\r\n    final GetProofsResult value = result.value;\r\n    updateItems(\r\n      newItems: value.items,\r\n      pageNumber: value.pageNumber,\r\n      totalItems: value.total,\r\n      totalPages: value.numberOfPages,\r\n    );\r\n  }\r\n\r\n  /// Properly dispose of the session when the manager is no longer needed\r\n  void dispose() {\r\n    if (_bearerToken != null) {\r\n      OpenPricesAPIClient.deleteUserSession(\r\n        uriHelper: ProductQuery.uriPricesHelper,\r\n        bearerToken: _bearerToken!,\r\n      );\r\n    }\r\n  }\r\n\r\n  @override\r\n  Widget buildItem({\r\n    required BuildContext context,\r\n    required Proof item,\r\n  }) {\r\n    if (item.filePath == null) {\r\n      return const SizedBox.shrink();\r\n    }\r\n\r\n    return SmoothCard(\r\n      child: InkWell(\r\n        onTap: () async {\r\n          if (selectProof) {\r\n            Navigator.of(context).pop(item);\r\n            return;\r\n          }\r\n          return Navigator.push<void>(\r\n            context,\r\n            MaterialPageRoute<void>(\r\n              builder: (BuildContext context) => PriceProofPage(item),\r\n            ),\r\n          );\r\n        },\r\n        child: _PriceProofListItem(item),\r\n      ),\r\n    );\r\n  }\r\n}\r\n```"
    },
    {
      "type": "comment_created",
      "title": "openfoodfacts/smooth-app#6561",
      "time": "2025-05-08T10:12:28.000Z",
      "link": "https://github.com/openfoodfacts/smooth-app/pull/6561#issuecomment-2862509888",
      "text": "> > Hello @monsieurtanuki, For the consistency of the code overall, I changed the code accordingly. If you want, I can still use `fetchInit` in the code.\r\n> \r\n> @AshutoshKhadse23 It has nothing to do with consistency. For proofs, there's a special case: at init time, we must perform a specific action, once. It's something that can be understood as \"there's an init phase for all subclasses, but luckily most of the time we do nothing\". What would be the point of `fetchInit` otherwise?\r\n\r\n@monsieurtanuki,\r\nWhat do you think about this approach ?\r\n```dart\r\nclass _InfiniteScrollProofManager extends InfiniteScrollManager<Proof> {\r\n  _InfiniteScrollProofManager({\r\n    required this.selectProof,\r\n  });\r\n\r\n  static const int _pageSize = 10;\r\n  final bool selectProof;\r\n  String? _bearerToken;\r\n\r\n  @override\r\n  Future<void> fetchInit() async {\r\n    final User user = ProductQuery.getWriteUser();\r\n    final MaybeError<String> token =\r\n    await OpenPricesAPIClient.getAuthenticationToken(\r\n      username: user.userId,\r\n      password: user.password,\r\n      uriHelper: ProductQuery.uriPricesHelper,\r\n    );\r\n\r\n    if (token.isError) {\r\n      throw MaybeError<GetProofsResult>.error(\r\n        error: token.error ?? 'Could not authenticate with the server',\r\n        statusCode: token.statusCode ?? 500,\r\n      );\r\n    }\r\n\r\n    _bearerToken = token.value;\r\n  }\r\n\r\n  @override\r\n  Future<void> fetchData(final int pageNumber) async {\r\n    if (_bearerToken == null) {\r\n      await fetchInit();\r\n      if (_bearerToken == null) {\r\n        throw MaybeError<GetProofsResult>.error(\r\n          error: 'Failed to obtain authentication token',\r\n          statusCode: 500,\r\n        );\r\n      }\r\n    }\r\n\r\n    final User user = ProductQuery.getWriteUser();\r\n    final MaybeError<GetProofsResult> result =\r\n    await OpenPricesAPIClient.getProofs(\r\n      GetProofsParameters()\r\n        ..orderBy = <OrderBy<GetProofsOrderField>>[\r\n          const OrderBy<GetProofsOrderField>(\r\n            field: GetProofsOrderField.created,\r\n            ascending: false,\r\n          ),\r\n        ]\r\n        ..owner = user.userId\r\n        ..pageSize = _pageSize\r\n        ..pageNumber = pageNumber,\r\n      uriHelper: ProductQuery.uriPricesHelper,\r\n      bearerToken: _bearerToken!,\r\n    );\r\n\r\n    await OpenPricesAPIClient.deleteUserSession(\r\n      uriHelper: ProductQuery.uriPricesHelper,\r\n      bearerToken: _bearerToken!,\r\n    );\r\n\r\n    if (result.isError) {\r\n      throw result.detailError;\r\n    }\r\n\r\n    final GetProofsResult value = result.value;\r\n    updateItems(\r\n      newItems: value.items,\r\n      pageNumber: value.pageNumber,\r\n      totalItems: value.total,\r\n      totalPages: value.numberOfPages,\r\n    );\r\n  }\r\n  ```"
    },
    {
      "type": "comment_created",
      "title": "openfoodfacts/smooth-app#6561",
      "time": "2025-05-08T09:15:02.000Z",
      "link": "https://github.com/openfoodfacts/smooth-app/pull/6561#issuecomment-2862341623",
      "text": "@monsieurtanuki,\r\nFor the consistency of the code overall, I changed the code accordingly. If you want, I can still use ```fetchInit``` in the code."
    },
    {
      "type": "comment_created",
      "title": "openfoodfacts/smooth-app#6561",
      "time": "2025-05-07T12:45:05.000Z",
      "link": "https://github.com/openfoodfacts/smooth-app/pull/6561#issuecomment-2858451747",
      "text": "> @AshutoshKhadse23 I would say it's good enough. A bit surprised by the \"All 3 proofs\" on top, referring specifically to \"proof\" when it's supposed to be generic. Regardless, please push your changes so I can review.\r\n\r\nThat was before I made the change, in that  I just want to ask about the UI from the grid to list."
    },
    {
      "type": "comment_created",
      "title": "openfoodfacts/smooth-app#6561",
      "time": "2025-05-07T12:43:33.000Z",
      "link": "https://github.com/openfoodfacts/smooth-app/pull/6561#issuecomment-2858447752",
      "text": "@monsieurtanuki,\r\nI have completed the implementation of the list in the proof page with a date, and also applied an infinite list.\r\nLooking forward to your feedback?\r\n\r\nhttps://github.com/user-attachments/assets/40adad4a-0e26-4ccc-8637-df34a49b4b98\r\n\r\n"
    },
    {
      "type": "comment_created",
      "title": "openfoodfacts/smooth-app#6561",
      "time": "2025-05-07T11:31:19.000Z",
      "link": "https://github.com/openfoodfacts/smooth-app/pull/6561#issuecomment-2858233586",
      "text": "@monsieurtanuki,\r\nDo you think this is alright?\r\n<img width=\"380\" alt=\"Screenshot 2025-05-07 at 5 00 36â€¯PM\" src=\"https://github.com/user-attachments/assets/3fbababb-611a-43d6-b144-60920d6c93de\" />\r\n"
    },
    {
      "type": "comment_created",
      "title": "openfoodfacts/smooth-app#6561",
      "time": "2025-05-07T11:12:12.000Z",
      "link": "https://github.com/openfoodfacts/smooth-app/pull/6561#issuecomment-2858163208",
      "text": "Hello @monsieurtanuki,\r\nCould you confirm this UI?\r\nI know you told only to add the date, but I thought proof ID could also be added.\r\n\r\n\r\nhttps://github.com/user-attachments/assets/0972a259-8fff-476b-894d-82c6c8d91bbb\r\n\r\n"
    },
    {
      "type": "comment_created",
      "title": "openfoodfacts/smooth-app#6561",
      "time": "2025-05-07T07:41:50.000Z",
      "link": "https://github.com/openfoodfacts/smooth-app/pull/6561#issuecomment-2857451351",
      "text": "Hello @monsieurtanuki,\r\nI will work on \"changing the proof display as explained, which wouldn't take you that long (but means creating many proofs first for testing)\""
    },
    {
      "type": "comment_created",
      "title": "openfoodfacts/smooth-app#6561",
      "time": "2025-05-06T14:05:51.000Z",
      "link": "https://github.com/openfoodfacts/smooth-app/pull/6561#issuecomment-2854709866",
      "text": "@monsieurtanuki,\r\nTake a final look, I think this would close it. (Maybe wrong)"
    },
    {
      "type": "comment_created",
      "title": "openfoodfacts/smooth-app#6561",
      "time": "2025-05-06T10:58:18.000Z",
      "link": "https://github.com/openfoodfacts/smooth-app/pull/6561#issuecomment-2854144070",
      "text": "@monsieurtanuki,\r\nCould you have a look?(just not sure about the ```bearerToken```)"
    },
    {
      "type": "comment_created",
      "title": "openfoodfacts/smooth-app#6561",
      "time": "2025-05-05T10:18:39.000Z",
      "link": "https://github.com/openfoodfacts/smooth-app/pull/6561#issuecomment-2850545798",
      "text": "> Hi @AshutoshKhadse23! I cannot comment everything, but on your way to OOP you experienced some confusion (like casually returning empty `SizedBox()`) and \"just-in-case\"ism (like a `refresh` method that is NEVER used).\r\n\r\nI am extremely embarrassed by it."
    },
    {
      "type": "comment_created",
      "title": "openfoodfacts/smooth-app#6561",
      "time": "2025-05-04T13:44:55.000Z",
      "link": "https://github.com/openfoodfacts/smooth-app/pull/6561#issuecomment-2849228456",
      "text": "@monsieurtanuki,\r\nYou are right !! \r\nSo changed the code according to the concept of OPP Java"
    },
    {
      "type": "comment_created",
      "title": "openfoodfacts/smooth-app#6576",
      "time": "2025-05-04T07:50:59.000Z",
      "link": "https://github.com/openfoodfacts/smooth-app/pull/6576#issuecomment-2849065357",
      "text": "Glad it worked out! Thanks @monsieurtanuki for the review and merge. Will keep the final approach in mind for consistency in future components too."
    },
    {
      "type": "pr_merged",
      "title": "openfoodfacts/smooth-app#6576",
      "time": "2025-05-04T07:12:06.000Z",
      "link": "https://github.com/openfoodfacts/smooth-app/pull/6576",
      "text": "fix: dark mode issue in feedback page",
      "turnaround_time": 68860
    },
    {
      "type": "comment_created",
      "title": "openfoodfacts/smooth-app#6576",
      "time": "2025-05-04T06:56:40.000Z",
      "link": "https://github.com/openfoodfacts/smooth-app/pull/6576#issuecomment-2849046021",
      "text": "> Hi @AshutoshKhadse23!\r\n> \r\n> I didn't realize that there were _two_ impacted colors: for the `ShapeDecoration` and for the `Icon`. Could you please attach a screenshot?\r\n> \r\n> Instead of repeating values I would have created two finals, but that's another story:\r\n> \r\n> ```dart\r\n> final Color background = lightTheme ? colors.primaryBlack : colors.primaryLight;\r\n> final Color foreground = lightTheme ? Colors.white : colors.primaryDark;\r\n> ```\r\n\r\nBut the color combination of each foreground and background is different somewhere, like:\r\n```\r\nbackgroundColor:\r\n             lightTheme ? colors.primaryBlack : colors.primaryLight,\r\nforegroundColor:\r\n             lightTheme ? Colors.white : colors.primaryDark,\r\n```\r\nAND\r\n```\r\nbackgroundColor:\r\n             lightTheme ? colors.primaryLight : colors.primaryDark,\r\nforegroundColor:\r\n             lightTheme ? colors.primaryDark : colors.primaryLight,\r\n```"
    },
    {
      "type": "comment_created",
      "title": "openfoodfacts/smooth-app#6576",
      "time": "2025-05-04T06:50:48.000Z",
      "link": "https://github.com/openfoodfacts/smooth-app/pull/6576#issuecomment-2849043837",
      "text": "@monsieurtanukil\r\nScreenshot:\r\n<img width=\"361\" alt=\"Screenshot 2025-05-04 at 12 19 24â€¯PM\" src=\"https://github.com/user-attachments/assets/3f243238-6ebe-4572-a692-e6ddc78e29ea\" />\r\n\r\n"
    },
    {
      "type": "comment_created",
      "title": "openfoodfacts/smooth-app#6576",
      "time": "2025-05-03T21:54:30.000Z",
      "link": "https://github.com/openfoodfacts/smooth-app/pull/6576#issuecomment-2848825710",
      "text": "@monsieurtanuki, Changed the code accrodingly\r\n"
    },
    {
      "type": "comment_created",
      "title": "openfoodfacts/smooth-app#6561",
      "time": "2025-05-03T21:09:49.000Z",
      "link": "https://github.com/openfoodfacts/smooth-app/pull/6561#issuecomment-2848809894",
      "text": "> Hi @AshutoshKhadse23! Very interesting PR, isn't it? I found a lot of inspiration reading your code. For the better I hope.\r\n\r\n@monsieurtanuki, Iâ€™m also finding this PR really interesting! Itâ€™s been a great way to learn more about the codebase."
    },
    {
      "type": "pr_opened",
      "title": "OpenFoodFacts/smooth-app#6576",
      "time": "2025-05-03T12:04:11Z",
      "link": "https://github.com/openfoodfacts/smooth-app/pull/6576",
      "text": "fix: dark mode issue in feedback page"
    },
    {
      "type": "pr_opened",
      "title": "OpenFoodFacts/smooth-app#6501",
      "time": "2025-03-31T08:50:05Z",
      "link": "https://github.com/openfoodfacts/smooth-app/pull/6501",
      "text": "fix: partial filter selector (#6491)"
    },
    {
      "type": "pr_opened",
      "title": "OpenFoodFacts/smooth-app#6540",
      "time": "2025-04-09T18:05:59Z",
      "link": "https://github.com/openfoodfacts/smooth-app/pull/6540",
      "text": "fix: missing discount indicator"
    },
    {
      "type": "pr_merged",
      "title": "OpenFoodFacts/smooth-app#6540",
      "time": "2025-04-10T15:53:54Z",
      "link": "https://github.com/openfoodfacts/smooth-app/pull/6540",
      "text": "fix: missing discount indicator"
    },
    {
      "type": "pr_opened",
      "title": "OpenFoodFacts/smooth-app#6547",
      "time": "2025-04-11T17:52:15Z",
      "link": "https://github.com/openfoodfacts/smooth-app/pull/6547",
      "text": "fix: Null check operator used on a null"
    },
    {
      "type": "pr_merged",
      "title": "OpenFoodFacts/smooth-app#6547",
      "time": "2025-04-12T11:27:25Z",
      "link": "https://github.com/openfoodfacts/smooth-app/pull/6547",
      "text": "fix: Null check operator used on a null"
    },
    {
      "type": "pr_opened",
      "title": "OpenFoodFacts/smooth-app#6553",
      "time": "2025-04-15T13:27:47Z",
      "link": "https://github.com/openfoodfacts/smooth-app/pull/6553",
      "text": "feat: Added stats view to the prices"
    },
    {
      "type": "pr_merged",
      "title": "OpenFoodFacts/smooth-app#6553",
      "time": "2025-04-20T09:27:07Z",
      "link": "https://github.com/openfoodfacts/smooth-app/pull/6553",
      "text": "feat: Added stats view to the prices"
    },
    {
      "type": "pr_opened",
      "title": "OpenFoodFacts/smooth-app#6561",
      "time": "2025-04-21T19:36:27Z",
      "link": "https://github.com/openfoodfacts/smooth-app/pull/6561",
      "text": "feat: Add infinite scrolling to the various Open Prices ListViews."
    },
    {
      "type": "pr_opened",
      "title": "OpenFoodFacts/openfoodfacts-dart#1059",
      "time": "2025-04-17T20:05:52Z",
      "link": "https://github.com/openfoodfacts/openfoodfacts-dart/pull/1059",
      "text": "feat: Add flexibility to PriceTotalStats"
    },
    {
      "type": "pr_merged",
      "title": "OpenFoodFacts/openfoodfacts-dart#1059",
      "time": "2025-04-19T15:57:20Z",
      "link": "https://github.com/openfoodfacts/openfoodfacts-dart/pull/1059",
      "text": "feat: Add flexibility to PriceTotalStats"
    },
    {
      "type": "pr_opened",
      "title": "OpenFoodFacts/openfoodfacts-dart#1075",
      "time": "2025-04-30T18:07:08Z",
      "link": "https://github.com/openfoodfacts/openfoodfacts-dart/pull/1075",
      "text": "feat: challenge list and retrive"
    }
  ],
  "open_prs": [
    {
      "link": "https://github.com/openfoodfacts/smooth-app/issues/6575",
      "title": "Search Results Not Updating After Changing Country Without App Restart",
      "stale_for": 7,
      "labels": [
        "ðŸ”Ž Search"
      ]
    }
  ],
  "authored_issue_and_pr": []
}